doc type; root segment; filling the heaD; LINE TAG; META ELEMENTS; BODY
REFINING THE DESIGN - documenty object model - dom; semantic tags; dont forget validator for html

http://html.net/tutorials/css/lesson6.php

//url("../images/butterfly.gif")    url("http://www.html.net/butterfly.gif")
background-repeat: repeat
background-repeat: repeat-y
background-repeat: repeat-x
Background-attachment: scroll
Background-attachment: fixed
background-position: 2cm 2cm
background-position: 50% 25%
background-position: top right


background-color: #FFCC66;
	background-image: url("butterfly.gif");
	background-repeat: no-repeat;
	background-attachment: fixed;
	background-position: right bottom;
=
background: #FFCC66 url("butterfly.gif") no-repeat fixed right bottom;
[background-color] | [background-image] | [background-repeat] | [background-attachment] | [background-position]

h1 {font-family: arial, verdana, sans-serif;}
	h2 {font-family: "Times New Roman", serif;}

	h1 {font-family: arial, verdana, sans-serif;}
	h2 {font-family: "Times New Roman", serif; font-style: italic;}

h1 {font-variant: small-caps;}
	h2 {font-variant: normal;}
	
	p {font-family: arial, verdana, sans-serif;}
	td {font-family: arial, verdana, sans-serif; font-weight: bold;}
	h1 {font-size: 30px;}
	h2 {font-size: 12pt;}
	h3 {font-size: 120%;}
	p {font-size: 1em;}

p {
		font-style: italic;
		font-weight: bold;
		font-size: 30px;
		font-family: arial, sans-serif;
	}
	p {
		font: italic bold 30px arial, sans-serif;
	}
http://html.net/tutorials/css/lesson4.php

text indent
p {
		text-indent: 30px;
	}

text alignmnenbt
th {
		text-align: right;
	}

	td {
		text-align: center;
	}

	p {
		text-align: justify;
	}

text decoration
h1 {
		text-decoration: underline;
	}

	h2 {
		text-decoration: overline;
	}

	h3 {
		text-decoration: line-through;
	}

	letter spacing
h1 {
		letter-spacing: 6px;
	}

	p {
		letter-spacing: 3px;
	}



text transformationm
	h1 {
		text-transform: uppercase;
	}

	li {
		text-transform: capitalize;
	]
also lowercase and none 

A pseudo-class allows you to take into account different conditions or events when defining a property for an HTML tag.
 links are specified in HTML with <a> tags. We can therefore use a as a selector in CSS: A link can have different statesa:
link {
		color: blue;   //unvisited link
	}

	a:visited {
		color: red;
	}

a:active {
		background-color: #FFFF00;
	}
a:hover {
		color: orange;
		font-style: italic;
	}
	




